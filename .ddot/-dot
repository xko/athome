exec 11>&1  
exec 12>&1
exec 13>&11
exec 14>/dev/null

export mute_="11>/dev/null"

-say   () { [[ "$#" != 0 ]] && printf "$@"  >&11  ;}
-sayS  () { [[ "$#" != 0 ]] && printf "$@"  >&14 ;}
-sayL  () { [[ "$#" != 0 ]] && printf "$@"  >&13 ;}

-sep   () { -sayL "\n" ; -sayS " " ;}
-say.  () { -say "$@"  ; -sep      ;}

-oneline () {
    -sayL "$@"     
    exec 13>/dev/null ; exec 14>&11
}

-morelines () {
    -sayS "$@" ; -sayS "\n"
    exec 14>/dev/null ; exec 13>&11
}

mute-   () {
    eval "$*" 11>/dev/null 12>/dev/null 13>/dev/null 14>/dev/null
} 

-esc () {
    printf "\e[%sm" "$1" >&12
    -say   "${@:2}"  
    printf "\e[0m"       >&12 
}

-paint  () { -esc "1;$1" "${@:2}" ;}
-green  () { -paint 32 "$@"       ;}
-red    () { -paint 31 "$@"       ;}
-blue   () { -paint 34 "$@"       ;}
-bold   () { -paint 1  "$@"       ;}

-err  () {
    if [ "$1" = "0" ]; then -green "$1"
    else                    -red   "$1"   ;fi 
}

-ask    () {
    [ -t 0 ]             || return 0
    -blue "${1:-"Ok? "}"  
    read -n1 -r           ; -sep
    [[ $REPLY =~ ^[Yy]$ ]] 
} 

-eval   () {
    -bold '$ '      ; -say. "$*";  
    -ask           || return 1
    local code="$*" ; shift $#
    eval "$code"    ; local r=$?
    # -sayL "â†‘ "      ; -errL $r  ; -sep
}

-have () {
    type $1 &>/dev/null && return 0
    [[ "$1" == */ ]]  && [[ -d "$1" ]] && return 0
    [[ "$1" == /* ]]  && [[ -r "$1" ]] && return 0
    [[ "$1" == ./* ]] && [[ -r "$1" ]] && return 0
    -say. "Missing %s" "$1"  
    return 1
}

.perl   () { perl -MTime::HiRes=time -e"$*" ;}
.now    () { .perl 'printf "%.9f", time'  ;}
.swatch () { echo -n .perl 'printf \"%.3f\", time - '$(.now) ;}


.tros  () { rev | sort -u | rev; }
.files () {
    find -L "$1" \( -type f -not -name "*-" -print \) -or \( -type d -name "*-" -prune \)  | .tros
}